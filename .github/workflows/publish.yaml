name: Publish to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.event.repository.fork == false
    steps:
    - name: Check-out repository
      uses: actions/checkout@v4

    - name: Set-up Task
      uses: arduino/setup-task@v2

    - name: Set-up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3

    - name: Set-up Poetry
      uses: abatilo/actions-poetry@v2

    - name: Configure Python cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Configure GitHub Pages
      uses: actions/configure-pages@v5

    - name: Install dependencies
      run: task install

    - name: Build site
      run: >-
        WEBDAV_URL=${{ vars.WEBDAV_URL }}
        WEBDAV_USER=${{ vars.WEBDAV_USER }}
        WEBDAV_PASSWORD=${{ secrets.WEBDAV_PASSWORD }}
        WEBDAV_TARGET=${{ vars.WEBDAV_TARGET }}
        task build

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: site
        path: site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3
